{
  "name": "Encore (DevPod)",
  // "build": {
  //   "dockerfile": "Dockerfile"
  // },
  "image": "docker.io/mabi/encore-devpod:local",
  "runArgs": [
    "--init",
   // "--privileged"
  ],
  // "onCreateCommand": "bash .devcontainer/clone-github-repos.sh",
  "postCreateCommand": "python -m pip install -U pip && pip install -r requirements.txt && python -m ipykernel install --user --name=devpod-spark && bash .devcontainer/fetch-akv-secrets.sh || true",
  "postStartCommand": "bash -lc 'for d in /workspaces/*/.git; do [ -d \"$d\" ] && git config --global --add safe.directory \"${d%/.git}\"; done'",
  "forwardPorts": [
    4040,
    8888
  ],
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "mounts": [
    "source=${localEnv:MOUNT_PATH},target=/workspaces/,type=bind,consistency=cached"
  ],
  "remoteUser": "vscode",
  "remoteEnv": {
    "SHELL": "/usr/bin/zsh",
    "GH_HOST": "enercity.ghe.com",
    "GHE_TOKEN": "${localEnv:GHE_TOKEN}", // create this PAT locally for enercity.ghe.com
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}", // keep if you also clone from github.com
    "AZURE_TENANT_ID": "${localEnv:AZURE_TENANT_ID}",
    "AZURE_CLIENT_ID": "${localEnv:AZURE_CLIENT_ID}",
    "AZURE_CLIENT_SECRET": "${localEnv:AZURE_CLIENT_SECRET}",
    "AKV_VAULT_NAME": "${localEnv:AKV_VAULT_NAME}"
  },
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/usr/bin/zsh",
            "args": [
              "-l"
            ]
          }
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.analysis.typeCheckingMode": "basic",
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": [
          "-q",
          "tests"
        ],
        "jupyter.askForKernelRestart": false
      },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-azuretools.vscode-docker",
        "github.vscode-github-actions",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers",
        "ms-azuretools.vscode-docker",
        "github.vscode-github-actions",
        "4ops.terraform",
        "christian-kohler.path-intellisense",
        "eamodio.gitlens",
        "github.copilot",
        "github.copilot-chat",
        "github.vscode-github-actions",
        "hashicorp.terraform",
        "innoverio.vscode-dbt-power-user",
        "ms-azure-load-testing.microsoft-testing",
        "ms-azuretools.azure-dev",
        "ms-azuretools.vscode-azure-github-copilot",
        "ms-azuretools.vscode-azure-mcp-server",
        "ms-azuretools.vscode-azureappservice",
        "ms-azuretools.vscode-azurecontainerapps",
        "ms-azuretools.vscode-azurefunctions",
        "ms-azuretools.vscode-azureresourcegroups",
        "ms-azuretools.vscode-azurestaticwebapps",
        "ms-azuretools.vscode-azurestorage",
        "ms-azuretools.vscode-azurevirtualmachines",
        "ms-azuretools.vscode-containers",
        "ms-azuretools.vscode-cosmosdb",
        "ms-python.black-formatter",
        "ms-python.debugpy",
        "ms-python.vscode-python-envs",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-ssh-edit",
        "ms-vscode.remote-explorer",
        "ms-vscode.vscode-node-azure-pack",
        "ms-windows-ai-studio.windows-ai-studio",
        "ms-azuretools.vscode-docker",
        "pkief.material-icon-theme",
        "redhat.vscode-yaml",
        "samuelcolvin.jinjahtml",
        "teamsdevapp.vscode-ai-foundry",
        "altimateai.vscode-altimate-mcp-server"
      ]
    }
  }
}